[{"/home/aditya/VSProjects/PC-Assemby-wizard/client/src/index.js":"1","/home/aditya/VSProjects/PC-Assemby-wizard/client/src/reportWebVitals.js":"2","/home/aditya/VSProjects/PC-Assemby-wizard/client/src/App.js":"3","/home/aditya/VSProjects/PC-Assemby-wizard/client/src/LoginPage.js":"4","/home/aditya/VSProjects/PC-Assemby-wizard/client/src/SearchPage.js":"5","/home/aditya/VSProjects/PC-Assemby-wizard/client/src/ProductPage.js":"6","/home/aditya/VSProjects/PC-Assemby-wizard/client/src/components/login/index.js":"7","/home/aditya/VSProjects/PC-Assemby-wizard/client/src/components/login/login.js":"8","/home/aditya/VSProjects/PC-Assemby-wizard/client/src/components/login/register.js":"9"},{"size":479,"mtime":1631769554455,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1631769554459,"results":"12","hashOfConfig":"11"},{"size":4256,"mtime":1631769554455,"results":"13","hashOfConfig":"11"},{"size":1861,"mtime":1631769554455,"results":"14","hashOfConfig":"11"},{"size":6563,"mtime":1631769554455,"results":"15","hashOfConfig":"11"},{"size":6631,"mtime":1631769554455,"results":"16","hashOfConfig":"11"},{"size":95,"mtime":1631769554455,"results":"17","hashOfConfig":"11"},{"size":2175,"mtime":1631769554455,"results":"18","hashOfConfig":"11"},{"size":2456,"mtime":1631769554455,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"wf3vpu",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/aditya/VSProjects/PC-Assemby-wizard/client/src/index.js",[],["41","42"],"/home/aditya/VSProjects/PC-Assemby-wizard/client/src/reportWebVitals.js",[],"/home/aditya/VSProjects/PC-Assemby-wizard/client/src/App.js",[],"/home/aditya/VSProjects/PC-Assemby-wizard/client/src/LoginPage.js",[],"/home/aditya/VSProjects/PC-Assemby-wizard/client/src/SearchPage.js",["43","44"],"import React from \"react\";\nimport \"./SearchPage.css\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\n\n\nfunction httpGetAsync(theUrl, callback)\n{\n    var xmlHttp = new XMLHttpRequest();\n    xmlHttp.onreadystatechange = function() { \n        if (xmlHttp.readyState === 4 && xmlHttp.status === 200)\n            callback(xmlHttp.responseText);\n    }\n    xmlHttp.open(\"GET\", theUrl, true); // true for asynchronous \n    xmlHttp.send(null);\n}\n\nfunction httpGet(theUrl)\n{\n    var xmlHttp = new XMLHttpRequest();\n    xmlHttp.open( \"GET\", theUrl, false ); // false for synchronous request\n    xmlHttp.send( null );\n    return xmlHttp.responseText;\n}\n\nclass SearchPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    //Add .right by default\n    //this.rightSide.classList.add(\"right\");\n    const context = this;\n    httpGetAsync(\"http://localhost:8081/api/item/search\", function(responseText) {\n        context.setState(prevState => ({ items: JSON.parse(responseText) }));\n        console.log(context.state)\n    })\n  }\n\n  addToCart(item) {\n    console.log(\"Add to cart\")\n    console.log(item)\n    const cart_uuid = document.cookie.split(\"user_uuid=\")[1].split(\" \")[0]\n    httpGetAsync(\"http://localhost:8081/api/cart?cart_uuid=\" + cart_uuid, function(res) {\n        var result = JSON.parse(res)\n        console.log(\"Result : \")\n        console.log(result)\n        var cart_list = \"\"\n        if (result.error) {\n            // Does not exist, create it\n            cart_list = item.item_uuid\n        } else {\n            cart_list = result.items\n            var tmp_list = cart_list.split(\",\")\n            if (tmp_list.indexOf(item.item_uuid) === -1)\n                tmp_list.push(item.item_uuid)\n            cart_list = tmp_list.join()\n            //cart_list = \"\"\n        }\n\n        console.log(\"cart_list : \" + cart_list)\n        httpGet(\"http://localhost:8081/api/cart/set?cart_uuid=\" + cart_uuid + \"&items=\" + cart_list)\n\n    })\n  }\n\n  changeState() {\n    \n    this.setState(prevState => ({ isLogginActive: !prevState.isLogginActive }));\n  }\n\n  network_req = null\n  render() {\n    const product_items = this.state.items\n    var product_by_type = {}\n    for (var i=0; i<product_items.length; i++) {\n        if (! product_by_type[product_items[i].type_name])\n            product_by_type[product_items[i].type_name] = []\n        \n        product_by_type[product_items[i].type_name].push(product_items[i])\n    }\n\n    var isLoggedIn = false\n    try {\n      isLoggedIn = document.cookie.split(\"user_uuid=\")[1].split(\" \")[0] !== \"\"\n    } catch(e) {\n      isLoggedIn = false\n    }\n\n    console.log(this.state.items)\n\n    return (\n      <div className=\"App\">\n        <div className=\"search\" style={{position: 'relative', top: 80}}>\n          <div className=\"container\" ref={ref => (this.container = ref)}>\n          <div>\n              <div>\n              {Object.keys(product_by_type).map(type_uuid => (\n                <div>\n                    <h2>{type_uuid}</h2>\n                    <div className=\"flex-container\" style={{ width: \"55%\", margin: 10, overflowX: 'scroll', position: \"relative\", left: 400}}>\n                        {product_by_type[type_uuid].map(item => (\n                            <div>\n                                <Card className=\"root\">\n                                    <CardActionArea style={{height: 300, width: 300}}>\n                                        <CardMedia\n                                            style={{height: 100}}\n                                            image={item.imageURL}\n                                            title={item.name}\n                                            />\n                                        <CardContent>\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                            {item.name}\n                                        </Typography>\n                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                            {item.description}\n                                        </Typography>\n                                        </CardContent>\n                                    </CardActionArea>\n                                    <CardActions style={{height: 40, background: \"white\"}}>\n                                        <Typography variant=\"h6\" color=\"textPrimary\" component=\"h2\">\n                                            {item.price}\n                                        </Typography>\n                                        {isLoggedIn && (\n                                            <Button onClick={() => this.addToCart(item)} size=\"small\" color=\"primary\">\n                                                <AddShoppingCartIcon />\n                                            </Button>\n                                        )}\n                                        <a href={item.productURL} target=\"_blank\">\n                                        <Button size=\"small\" color=\"primary\">\n                                            Open\n                                        </Button>\n                                        </a>\n                                    </CardActions>\n                                    </Card>\n                            </div>\n                        ))}\n                    </div>\n                    <hr />\n                </div>\n              ))}\n              </div>\n              \n          </div>\n          </div>\n          \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchPage;\n\n/**\n * <div className=\"flex-container\">\n            {product_items.map(item => (\n                <div className=\"p-2\">\n                    <h3>{item.name}</h3>\n                    <p>{item.description}</p>\n                    <img style={{height: 50, width: 50}} src={item.imageURL[0]}/>\n                    <a href={item.productURL[0]} target=\"_blank\"><button>Open</button></a>\n                </div>\n            ))}\n          </div>\n */","/home/aditya/VSProjects/PC-Assemby-wizard/client/src/ProductPage.js",["45"],"import React from \"react\";\nimport \"./ProductPage.css\";\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport RemoveShoppingCartIcon from '@material-ui/icons/RemoveShoppingCart';\n\n\nfunction httpGetAsync(theUrl, callback)\n{\n    var xmlHttp = new XMLHttpRequest();\n    xmlHttp.onreadystatechange = function() { \n        if (xmlHttp.readyState === 4 && xmlHttp.status === 200)\n            callback(xmlHttp.responseText);\n    }\n    xmlHttp.open(\"GET\", theUrl, true); // true for asynchronous \n    xmlHttp.send(null);\n}\n\nfunction httpGet(theUrl)\n{\n    var xmlHttp = new XMLHttpRequest();\n    xmlHttp.open( \"GET\", theUrl, false ); // false for synchronous request\n    xmlHttp.send( null );\n    return xmlHttp.responseText;\n}\n\nclass ProductPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    //Add .right by default\n    //this.rightSide.classList.add(\"right\");\n    const context = this;\n    const cart_uuid = document.cookie.split(\"user_uuid=\")[1].split(\" \")[0]\n    httpGetAsync(\"http://localhost:8081/api/cart/get?cart_uuid=\" + cart_uuid, function(responseText) {\n        context.setState(prevState => ({ items: JSON.parse(responseText) }));\n        console.log(context.state)\n    })\n  }\n\n  removeFromCart(item) {\n    console.log(\"Add to cart\")\n    console.log(item)\n    const cart_uuid = document.cookie.split(\"user_uuid=\")[1].split(\" \")[0]\n    httpGetAsync(\"http://localhost:8081/api/cart?cart_uuid=\" + cart_uuid, function(res) {\n        var result = JSON.parse(res)\n        console.log(\"Result : \")\n        console.log(result)\n        var cart_list = \"\"\n        if (result.error) {\n            // Does not exist, do not delete anything\n            return\n        } else {\n            cart_list = result.items\n            var tmp_list = cart_list.split(\",\")\n            var serarch_index = tmp_list.indexOf(item.item_uuid)\n            if (serarch_index !== -1)\n                tmp_list.splice(serarch_index, 1)\n            cart_list = tmp_list.join()\n            //cart_list = \"\"\n        }\n\n        console.log(\"cart_list : \" + cart_list)\n        httpGet(\"http://localhost:8081/api/cart/set?cart_uuid=\" + cart_uuid + \"&items=\" + cart_list)\n\n    })\n  }\n\n  changeState() {\n    \n    this.setState(prevState => ({ isLogginActive: !prevState.isLogginActive }));\n  }\n\n  render() {\n    const product_items = this.state.items\n    var product_by_type = {}\n    for (var i=0; i<product_items.length; i++) {\n        if (! product_by_type[product_items[i].type_name])\n            product_by_type[product_items[i].type_name] = []\n        \n        product_by_type[product_items[i].type_name].push(product_items[i])\n    }\n\n    var isLoggedIn = false\n    try {\n      isLoggedIn = document.cookie.split(\"user_uuid=\")[1].split(\" \")[0] !== \"\"\n    } catch(e) {\n      isLoggedIn = false\n    }\n\n    console.log(this.state.items)\n\n    return (\n      <div className=\"App\">\n        <div className=\"search\" style={{position: 'relative', top: 80}}>\n          <div className=\"container\" ref={ref => (this.container = ref)}>\n          <div>\n              <div>\n              {Object.keys(product_by_type).map(type_uuid => (\n                <div>\n                    <h2>{type_uuid}</h2>\n                    <div className=\"flex-container\" style={{ margin: 10, overflowX: 'scroll', position: \"relative\", left: 0}}>\n                        {product_by_type[type_uuid].map(item => (\n                            <div>\n                                <Card className=\"root\">\n                                    <CardActionArea style={{height: 300, width: 300}}>\n                                        <CardMedia\n                                            style={{height: 100}}\n                                            image={item.imageURL}\n                                            title={item.name}\n                                            />\n                                        <CardContent>\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                            {item.name}\n                                        </Typography>\n                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                            {item.description}\n                                        </Typography>\n                                        </CardContent>\n                                    </CardActionArea>\n                                    <CardActions style={{height: 40, background: \"white\"}}>\n                                        <Typography variant=\"h6\" color=\"textPrimary\" component=\"h2\">\n                                            {item.price}\n                                        </Typography>\n                                        {isLoggedIn && (\n                                            <Button onClick={() => this.removeFromCart(item)} size=\"small\" color=\"primary\">\n                                                <RemoveShoppingCartIcon />\n                                            </Button>\n                                        )}\n                                        <a href={item.productURL} target=\"_blank\">\n                                        <Button size=\"small\" color=\"primary\">\n                                            Open\n                                        </Button>\n                                        </a>\n                                    </CardActions>\n                                    </Card>\n                            </div>\n                        ))}\n                    </div>\n                    <hr />\n                </div>\n              ))}\n              </div>\n              \n          </div>\n          </div>\n          \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProductPage;\n\n/**\n * <div className=\"flex-container\">\n            {product_items.map(item => (\n                <div className=\"p-2\">\n                    <h3>{item.name}</h3>\n                    <p>{item.description}</p>\n                    <img style={{height: 50, width: 50}} src={item.imageURL[0]}/>\n                    <a href={item.productURL[0]} target=\"_blank\"><button>Open</button></a>\n                </div>\n            ))}\n          </div>\n */","/home/aditya/VSProjects/PC-Assemby-wizard/client/src/components/login/index.js",[],"/home/aditya/VSProjects/PC-Assemby-wizard/client/src/components/login/login.js",[],"/home/aditya/VSProjects/PC-Assemby-wizard/client/src/components/login/register.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":3,"column":10,"nodeType":"52","messageId":"53","endLine":3,"endColumn":20},{"ruleId":"54","severity":1,"message":"55","line":140,"column":67,"nodeType":"56","endLine":140,"endColumn":82},{"ruleId":"54","severity":1,"message":"55","line":140,"column":67,"nodeType":"56","endLine":140,"endColumn":82},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation"]